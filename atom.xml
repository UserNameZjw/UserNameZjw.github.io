<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://UserNameZjw.github.io</id>
    <title>「谨言慎行」</title>
    <updated>2019-06-14T13:53:25.279Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://UserNameZjw.github.io"/>
    <link rel="self" href="https://UserNameZjw.github.io/atom.xml"/>
    <subtitle>一位年近三十的中年油腻肥胖老男人的中年危机</subtitle>
    <logo>https://UserNameZjw.github.io/images/avatar.png</logo>
    <icon>https://UserNameZjw.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, 「谨言慎行」</rights>
    <entry>
        <title type="html"><![CDATA[「ThinkPHP 6.0」部分配置与控制器]]></title>
        <id>https://UserNameZjw.github.io/post/thinkphp-6-2</id>
        <link href="https://UserNameZjw.github.io/post/thinkphp-6-2">
        </link>
        <updated>2019-06-14T04:36:21.000Z</updated>
        <summary type="html"><![CDATA[<p>重点：<br>
ThinkPHP 6.0 部分配置<br>
ThinkPHP 6.0 控制器</p>
]]></summary>
        <content type="html"><![CDATA[<p>重点：<br>
ThinkPHP 6.0 部分配置<br>
ThinkPHP 6.0 控制器</p>
<!-- more -->
<blockquote>
<p>如果是 Nginx 服务器，并且版本不是太高，你需要看一下官方文档中的 Nginx 的路由转向配置，避免一下不必要的坑</p>
</blockquote>
<p>官网参考链接：<a href="https://www.kancloud.cn/manual/thinkphp6_0/1037488">TP6 URL访问</a><br>
找到 「Nginx」部分 图↓<br>
<img src="https://UserNameZjw.github.io/post-images/1560508162806.png" alt=""></p>
<pre><code>location / { // …..省略部分代码
   if (!-e $request_filename) {
   		rewrite  ^(.*)$  /index.php?s=/$1  last;
    }
}
</code></pre>
<p>如果你用的是跟我一样的 MxSrvs 软件，配置如下↓<br>
<img src="https://UserNameZjw.github.io/post-images/1560508384596.png" alt=""><br>
然后重启 Nginx 服务器即可。</p>
<h3 id="变化">变化</h3>
<p>1.根目录文件名变化</p>
<blockquote>
<p>ThinkPHP 5 版本(图左)是 application 文件夹，ThinkPHP 6 版本(图右)直接命名就是 app 文件夹。
<img src="https://UserNameZjw.github.io/post-images/1560509598577.png" alt=""></p>
</blockquote>
<p>2.默认用模式</p>
<blockquote>
<p>ThinkPHP 6 默认是单应用模式，TP5 版本默认是多应用模式。<br>
TP6 的多应用模式需要手动开启支持。<br>
开启方法修改 config/app.php 配置文件中配置为  'auto_multi_app'   =&gt; true 即可。<br>
单例模式中，在控制器空间命名中，可以省略掉应用名 index （举例）。<br>
命名空间<br>
TP5 写法  <strong>namespace app\index\controller;</strong><br>
TP6 写法  <strong>namespace app\controller;</strong>   (单应用模式)<br>
文件位置<br>
TP5 文件位置 <strong>application/index/controller/Index.php</strong><br>
TP6 文件位置 <strong>app/controller/Index.php</strong><br>
多应用开启后，就需要跟TP5一样的写法</p>
</blockquote>
<p>注意：如果开启多应用模式，需要删除掉框架默认自带的 controller 文件夹，不然会依然每次访问，都默认到 controller 。</p>
<p>3.控制器命名规范变化<br>
TP 5 中需要控制器文件名必须采用驼峰命名（首字母大写: Index）。<br>
TP6 中兼容了普通写法，文件名完全小写: index ，只需要你的类名跟文件名保持一致即可</p>
<blockquote>
<p>假设 文件名为 index.php ，那么类的写法为 class index{ } 。</p>
</blockquote>
<p>4.支持控制器大驼峰命名  (两者都默认支持)</p>
<blockquote>
<p>举例：<br>
控制器文件名为 HelloWorld.php ，类名保持一致为 class HelloWorld { }<br>
文件路径 app\index\controller\HelloWorld.php<br>
访问地址 http://localhost/index.php/hello_world<br>
现支持 http://localhost/index.php/HelloWorld  访问
此功能默认开启，如果想关闭，需要修改 route.php 配置文件中配置为 url_convert'   =&gt; false  即可。</p>
</blockquote>
<p>5.控制器文件名默认省略 controller  后缀</p>
<blockquote>
<p>默认控制器文件名格式 Index.php，开启后，需要把控制器文件名格式变更为 IndexController.php<br>
开启方法，修改 route.php 配置文件中配置为 'controller_suffix'     =&gt; true</p>
</blockquote>
<p>6.错误信息
TP6 中没有开发模式<br>
只需要修改 config/app.php 配置文件中配置为 'show_error_msg'   =&gt; true 即可显示错误信息，默认关闭。</p>
<h3 id="配置小结">配置小结</h3>
<p>本小结仅限本文出现，当然还有其他好的配置。<br>
1.开启多应用模式</p>
<blockquote>
<p>修改 config/app.php 配置文件中配置为  'auto_multi_app'   =&gt; true</p>
</blockquote>
<p>2.关闭控制器大驼峰命名访问支持</p>
<blockquote>
<p>修改 route.php 配置文件中配置为 url_convert'   =&gt; false</p>
</blockquote>
<p>3.开启错误信息</p>
<blockquote>
<p>修改 config/app.php 配置文件中配置为 'show_error_msg'   =&gt; true</p>
</blockquote>
<p>4.开启控制器严格模式，即文件名不省略 Controller</p>
<blockquote>
<p>修改 route.php 配置文件中配置为 'controller_suffix'     =&gt; true</p>
</blockquote>
<h3 id="控制器">控制器</h3>
<p>1.经典型控制器(多应用模式)</p>
<pre><code>&lt;?php
namespace app\index\controller;

class Index
{
    public function index()
    {
        return 'index';
    }
}
</code></pre>
<p>文件位置：app\index\controller\Index.php<br>
访问URL：http://localhost/index.php/index</p>
<p>2.多级控制器(理论支持无限级)</p>
<pre><code>&lt;?php
namespace app\index\controller\user;

class  Blog 
{
    public function index()
    {
        return 'index';
    }
    
}
</code></pre>
<p>文件位置：app/index/controller/user/Blog.php<br>
访问URL：http://localhost/index.php/user.blog/index<br>
注意事项如下↓<br>
<img src="https://UserNameZjw.github.io/post-images/1560519428516.png" alt=""></p>
<h3 id="路由">路由</h3>
<p>多级控制器官方推荐访问方法为 自定义配置路由<br>
下节再聊🤣🤣🤣</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【失误】Mac 上关于链接本地MySQL数据库的报错2002]]></title>
        <id>https://UserNameZjw.github.io/post/Mac-error</id>
        <link href="https://UserNameZjw.github.io/post/Mac-error">
        </link>
        <updated>2019-06-11T15:10:54.000Z</updated>
        <summary type="html"><![CDATA[<p>以此为戒<br>
绝不再犯<br>
再犯...我也不能咋地自己不是  😂😂😂</p>
]]></summary>
        <content type="html"><![CDATA[<p>以此为戒<br>
绝不再犯<br>
再犯...我也不能咋地自己不是  😂😂😂</p>
<!-- more -->
<h3 id="解决-mac-连接-mysql-本地数据库出现-2002-错误">解决 Mac 连接 MySQL 本地数据库出现 2002 错误</h3>
<p>仅仅就一个注意事项，除了第一次配置 Mac 环境的时候坑了我一把，终于在我没把它当回事的时候，又出来坑了我一个小时，本次，提醒自己。<br>
重要事情说三遍</p>
<blockquote>
<p>Mac 链接本地数据库的时候，必须用 127.0.0.1 而不能用 localhost<br>
Mac 链接本地数据库的时候，必须用 127.0.0.1 而不能用 localhost<br>
Mac 链接本地数据库的时候，必须用 127.0.0.1 而不能用 localhost</p>
</blockquote>
<p>我指的是在 config 的连接文件中的访问 指向
不然会报错...错...错！！！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[「ThinkPHP 6.0」下载与安装]]></title>
        <id>https://UserNameZjw.github.io/post/thinkphp-6-1</id>
        <link href="https://UserNameZjw.github.io/post/thinkphp-6-1">
        </link>
        <updated>2019-06-11T03:12:04.000Z</updated>
        <summary type="html"><![CDATA[<p>本文仅介绍如何安装TP6<br>
仅记录本人的实际经过<br>
如有后来者，不保证经验完全可以照搬</p>
]]></summary>
        <content type="html"><![CDATA[<p>本文仅介绍如何安装TP6<br>
仅记录本人的实际经过<br>
如有后来者，不保证经验完全可以照搬</p>
<!-- more -->
<p>闲话不多说，直接进入主题</p>
<h3 id="资料及参考">资料及参考</h3>
<p>官方文档：<a href="https://www.kancloud.cn/manual/thinkphp6_0/1037479">TP6官方文档「预览版」</a><br>
本文主要参考官方文档<br>
第一章[安装]：<a href="https://www.kancloud.cn/manual/thinkphp6_0/1037481">第一章链接</a><br>
安装工具 composer ，关于composer 不多做介绍<br>
composer 官网(国外) ：<a href="https://getcomposer.org/">composer 官网链接</a><br>
composer 中国镜像官网：<a href="https://www.phpcomposer.com/">composer 中国镜像官网链接</a></p>
<blockquote>
<p>为什么需要中国镜像官网，是因为「中国国情」导致无法访问到国外站点，除非借助梯子<br>
其实TP6的文档非常详细了，包括关于 composer 的安装、替换镜像源、下载软件都有详细步骤讲解。</p>
</blockquote>
<h3 id="实际上手">实际上手</h3>
<p>虽然官方的说明非常详细，但也根据每个人的电脑环境，以及系统版本等不同因素而受到不同的影响，以下记录本人的上手情况</p>
<h3 id="上手环境">上手环境!</h3>
<p>电脑配置图↓<br>
<img src="https://UserNameZjw.github.io/post-images/1560225219378.png" alt="电脑环境"><br>
PHP、Mysql、Nginx 集成环境软件：<a href="http://www.xsrvs.com/">MxSrvs 官网</a><br>
官网截图↓<br>
<img src="https://UserNameZjw.github.io/post-images/1560225646600.png" alt=""><br>
一款很OK的环境集成工具，简单，满足需求。<br>
缺点：对我来说，唯一的不足就是下载实在是太慢。不过如果有梯子，可以通过谷歌云下载，速度还是OK得，我就是本方式下载</p>
<h3 id="安装-composer">安装 composer</h3>
<p>这里我是之前就有安装过，所以直接使用就行了。<br>
可以直接对照着TP6文档一步一步操作。</p>
<h3 id="安装tp6">安装TP6</h3>
<p>我在这个安装过程中，耗费了将近半个小时的时间，总结了一下原因</p>
<ol>
<li>镜像源替换失败</li>
<li>人品(后面介绍)</li>
</ol>
<p>环境需求：</p>
<blockquote>
<p>安装TP6 需要 PHP 版本 &gt;= 7.1.0 。</p>
</blockquote>
<p>安装步骤(仅介绍Mac)</p>
<ol>
<li>打开终端工具，顺带检查一下 composer 。
在终端键入 composer 然后回车<br>
会出现下图 ↓  即代表安装正确并且全局可使用 composer<br>
<img src="https://UserNameZjw.github.io/post-images/1560226968175.png" alt=""></li>
<li>安装开发版(因为现在还没有正式版😁😁)<br>
先找到要安装的文件夹目录，键入 cd 然后文件目录路径，回车。<br>
我安装的是 /Users/zjw/Documents/web 目录下<br>
小技巧，如果在Mac 上不知道路径，只要把你的文件夹拖进终端就可。</li>
</ol>
<pre><code>cd /Users/zjw/Documents/web 
</code></pre>
<p>然后复制TP6文档中的开发版安装代码，回车，就会自动安装了。代码位置下图↓
<img src="https://UserNameZjw.github.io/post-images/1560227622056.png" alt=""><br>
代码 ：</p>
<pre><code>composer create-project topthink/think=6.0.x-dev tp
</code></pre>
<p>注意事项：最后的 「tp」 代表你要创建的用来安装TP6 的文件夹名，这个是可以随便更改的，例如我的是要放在 tp6 文件夹下的，所以 只需要把最后的 「tp」改为「tp6」即可。<br>
由于每个人的网络情况的不同，下载时间也不同，我加上网络以及人品，折腾了半个多小时。<br>
安装完之后的截图↓<br>
<img src="https://UserNameZjw.github.io/post-images/1560228060858.jpg" alt=""></p>
<p>至此，安装完成。<br>
当然这是正常流程。<br>
下面来说下我的人品问题。
为什么归结于人品呢，有人会问，成功就是成功，失败就是失败，肯定是有原因的。<br>
可是，我说一个现象，如有雷同，请告诉我，吾道不孤。<br>
正题：<br>
一切代码，严格按照教程流程来的。刻意把 web 目录下原本创建的 tp6 文件夹删除。<br>
然而，我竟然有两次跑完代码，显示创建以及下载成功的时候，却仅仅在 web 目录下创建了一个空的 tp6 文件夹，没有任何东西，最后一次的成功，死马当作活马医，删除了一下 composer 的缓存文件，漫长的等待之后，我终于如愿以偿的看到了下图↓<br>
<img src="https://UserNameZjw.github.io/post-images/1560228518737.jpg" alt=""><br>
看到上图的操作方法，以我的本地环境为例<br>
也可以参考官网文档里的方法<br>
先把本地环境 PHP 版本更换为合适的版本，MxSrvs 提供了 7.2.6 版本，变更后会自动重启。<br>
<img src="https://UserNameZjw.github.io/post-images/1560229809105.png" alt=""><br>
接下来把 Nginx 的配置文件 更改一下。<br>
<img src="https://UserNameZjw.github.io/post-images/1560229920582.png" alt=""><br>
具体更改位置下图 ↓
<img src="https://UserNameZjw.github.io/post-images/1560230041802.png" alt=""><br>
在这两个地方增加上你的目录即可，然后重启一下你的 Nginx 服务器！<br>
打开浏览器输入 127.0.0.1 或者 localhost 就可以看到 TP 特有的欢迎页了<br>
TP 都是以 public 文件夹下的 index 为单一入口的，只需要把路径精确到 public 就可以了。</p>
<p>感谢互联网的开放精神，拯救了我。<br>
其实，具体是不是缓存的问题，还是网络的问题，我真的深究不来，既然成功了，那就当成缓存问题来处理好了。💀💀💀</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【重学PHP】序言]]></title>
        <id>https://UserNameZjw.github.io/post/chong-xue-php</id>
        <link href="https://UserNameZjw.github.io/post/chong-xue-php">
        </link>
        <updated>2019-06-10T11:30:58.000Z</updated>
        <summary type="html"><![CDATA[<p>这个世界，最公平的就是「你付出多少努力，生活就回报你多少收获」<br>
希望未来的自己，感谢现在努力的自己<br>
谨以此记录</p>
]]></summary>
        <content type="html"><![CDATA[<p>这个世界，最公平的就是「你付出多少努力，生活就回报你多少收获」<br>
希望未来的自己，感谢现在努力的自己<br>
谨以此记录</p>
<!-- more -->
<p>本篇写在即在一个小时后迎来第一次直播课的前夕，花费7880，报名参与一个PhpEr进阶班。这应该是除了大学，我所为学习花费最大的一笔单项支出，希望我能有更多的收获，或者说，有让自己满意的收获。<br>
其实，做这个决定，真的是为了弥补我这几年为了这安逸的工作环境而不愿激励自己学习新知识后果，希望其他人以此为戒。</p>
<h3 id="背景">背景</h3>
<ol>
<li>图安逸，不思进取</li>
<li>发现与社会必须技能脱节</li>
<li>真真的被生活压力所迫</li>
<li>不想让未来的自己鄙视现在的自己</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://UserNameZjw.github.io/post/hello-gridea</id>
        <link href="https://UserNameZjw.github.io/post/hello-gridea">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="http://hvenotes.fehey.com/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>𝖶𝗂𝗇𝖽𝗈𝗐𝗌</strong> 或 <strong>𝖬𝖺𝖼𝖮𝖲</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>